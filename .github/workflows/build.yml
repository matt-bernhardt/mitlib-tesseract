name: Build assets
on:
  pull_request:
    branches: [ main ]
jobs:
  build_assets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout theme                      # 1.  Initialize local environment. Checkout code, install tools, etc.
                                                  # FIXME - The checkout happens in a detached head state, so the branch
                                                  # isn't showing up in the stylesheet correctly. This also may mean an
                                                  # orphan commit getting created. Maybe using fetch-depth 0?
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install NPM packages
        run: npm install
      - name: Compile global                      # 2a. The actual build - the next three steps are Sass compiling...
        uses: gha-utilities/sass-build@v0.2.2
        with:
          source: css/global.scss
          destination: css/build/global.css
      - name: Compile forms
        uses: gha-utilities/sass-build@v0.2.2
        with:
          source: css/forms.scss
          destination: css/build/forms.css
      - name: Compile hours
        uses: gha-utilities/sass-build@v0.2.2
        with:
          source: css/hours.scss
          destination: css/build/hours.css
      - name: Run Grunt steps                     # 2b. The rest of the build after Sass happens through Grunt (see 
                                                  #     Gruntfile.js)
        run: grunt default
      - name: DEBUG inspect build output          # At this point, the build is complete. We just need to get the
                                                  # output into a state that can be distributed.
                                                  # The next few steps confirm that we've built what we expect (the
                                                  # stylesheet should have branch information, and there should be built
                                                  # css and js files)
        run: git status
      - name: DEBUG confirm git branch/commit in stylesheet
        run: head style.css
      - name: DEBUG confirm CSS build output
        run: ls -lR ./css/build/
      - name: DEBUG confirm JS build output
        run: ls -lR ./js/build/
      - name: Store build result as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: |
            css
            !css/**/*.scss
            fonts
            images
            inc
            js
            languages
            lib
            libs
            composer.json
            *.css
            *.php
            *.png
            *.html

  development_release:
    needs: build_assets                           # This takes the build output from build_assets, commits it on a
                                                  # separate `tesseract` branch, and tags that as a pre-release (which
                                                  # should be enough for the result to be picked up by Composer).
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: tesseract
      - name: DEBUG confirm our place in git tree
        run: git log --oneline --decorate --graph --all
      - name: Retrieve build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Stage changed files for commit
        run: |
          git config --local user.email 'action@github.com'
          git config --local user.name 'GitHub Action'
          git add .
          git status
      - name: Force-add built content (stylesheets and javascript) - necessary because of .gitignore
        run: |
          git add -f css/build/*
          git add -f js/build/*
      - name: DEBUG Confirm scope of changes to dev-release
        run: git status
      - name: Commit changes                      # TODO - could we get a better commit message?
        run: |
          git commit -m 'Updates theme including compiled assets'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Dev release ${{ github.ref }}
          body: |
            This release created automatically. Please edit this text to something meaningful.
          draft: false
          prerelease: true
      - name: DEBUG Confirm our place in git tree (compare to previous git tree output)
        run: git log --oneline --decorate --graph --all
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: tesseract
